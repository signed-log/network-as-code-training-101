---
- name: Define and enforce a configuration reference
  hosts: all
  gather_facts: false
  vars:
    ansible_connection: ansible.netcommon.network_cli
    ansible_python_interpreter: "python"
    ansible_network_os: 'arista.eos.eos'
    ansible_user: admin
    ansible_password: admin
    ansible_become_method: enable
    method: "replaced"
  tasks:
    - name: Get hostvars from the inventory
      ansible.builtin.debug:
        var: hostvars[inventory_hostname]
    - name: Set the hostname
      arista.eos.eos_hostname:
        config:
          hostname: "{{ name }}"
        state: "{{ method }}"
    - name: Set Interface config
      arista.eos.eos_l3_interfaces:
        state: "{{ method }}"
        config:
          - name: "{{ item.name }}"
            ipv4:
              - address: "{{ item.ip_addresses.0.address }}"
      loop: "{{ hostvars[inventory_hostname].interfaces }}"
      when: item.ip_addresses | length > 0
    - name: Set BGP config
      arista.eos.eos_bgp_global:
        state: "{{ method }}"
        config:
          as_number: "{{ item.asn }}"
          # Make a list of all the neighbors using map to generate the appropriate keys
          neighbor: "{{ item.peer | map('extract', 'source_ip.address') | map('format', 'peer: {}') | list }}"
      loop: "{{ hostvars[inventory_hostname].bgp_routing_instances }}"
      when: item.peer | length > 0
